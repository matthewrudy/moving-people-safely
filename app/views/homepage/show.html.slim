.search_module
  .search_block
    h2 = t('homepage.titles.detainee_search')

    = form_for search_form, url: detainees_search_path, method: :post do |f|
      = label_tag :search_prison_number, t('detainee_search.prison_number', scope: %i[helpers label])
      .search_input_wrapper
        = f.search_text_field :prison_number, name: 'prison_number', class: (search_form.errors.empty? ? 'form-control' : 'form-control control-error')
        = f.submit class: 'search_button', value: 'Search'

  - if search_form.escort
    .search-results
      = render partial: 'result',
        locals: { escort: search_form.escort, detainee: search_form.detainee, move: search_form.move }
  - elsif search_form.valid?
    .search-results
      = render partial: 'no_result',
        locals: { prison_number: search_form.prison_number }
  - elsif search_form.prison_number
    .search-error
      = render partial: 'error',
        locals: { prison_number: search_form.prison_number }

.search-header
  .date-picker
    = form_tag(escorts_search_path) do
      = hidden_field_tag "prison_number", prison_number

      span.label Scheduled moves
      .date-picker-wrapper
        span.date-picker-field.input-group.date data-provide='datepicker'
          = text_field_tag 'escorts_due_on', date_picker, class: 'no-script form-control date-field'
          span.no-script.calendar-icon.input-group-addon
        button.go type='submit' name='commit' Go

      = render partial: 'shared/radio_date_picker', locals: { picker: RadioDatePickerPresenter.new('escorts_due_on', date_picker) }

  - if dashboard.escorts.empty?
    #escorts_gauges.escorts-gauges
      dl.status_gauges
        == dashboard.render_no_moves_indicator
  - else
    #escorts_gauges.escorts-gauges
      dl.status_gauges
        == dashboard.render_detainees_indicator
        == dashboard.render_risk_indicator
        == dashboard.render_health_indicator
        == dashboard.render_offences_indicator

.search-results
  hr
  - unless dashboard.escorts.empty?
    = render partial: 'escorts', locals: { escorts: dashboard.escorts }
